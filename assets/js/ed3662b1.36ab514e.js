"use strict";(self.webpackChunkmodrinth_doc=self.webpackChunkmodrinth_doc||[]).push([[345],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=o,h=m["".concat(c,".").concat(u)]||m[u]||l[u]||i;return n?r.createElement(h,a(a({ref:t},d),{},{components:n})):r.createElement(h,a({ref:t},d))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7076:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={},c="Domains",p={unversionedId:"details/domains",id:"details/domains",isDocsHomePage:!1,title:"Domains",description:"The format of the base URL for Modrinth's API is https://?api.modrinth.com/{version}/, where branch is the branch of Modrinth you're using and version is the version of the API you are using (the latest version of which is v2). You can learn more about how Modrinth's API versions work here.",source:"@site/docs/details/domains.md",sourceDirName:"details",slug:"/details/domains",permalink:"/docs/details/domains",editUrl:"https://github.com/modrinth/docs/edit/master/docs/details/domains.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/getting-started"},next:{title:"Versioning",permalink:"/docs/details/versioning"}},d=[],l={toc:d};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"domains"},"Domains"),(0,i.kt)("p",null,"The format of the base URL for Modrinth's API is ",(0,i.kt)("inlineCode",{parentName:"p"},"https://{branch-}?api.modrinth.com/{version}/"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"branch")," is the branch of Modrinth you're using and ",(0,i.kt)("inlineCode",{parentName:"p"},"version")," is the version of the API you are using (the latest version of which is v2). You can learn more about how Modrinth's API versions work ",(0,i.kt)("a",{parentName:"p",href:"/docs/details/versioning"},"here"),"."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Version 1 of the API is the only exception to this rule, as it was the following: ",(0,i.kt)("inlineCode",{parentName:"p"},"https://api.modrinth.com/api/v1/")),(0,i.kt)("p",{parentName:"div"},"Version 1 is deprecated, and anything using it should be migrated to version 2. See its migration guide ",(0,i.kt)("a",{parentName:"p",href:"/docs/migrations/v1-to-v2"},"here"),"."))),(0,i.kt)("p",null,"The branch can either be ",(0,i.kt)("inlineCode",{parentName:"p"},"staging")," or nothing (production). If you're using the production server, the path will be ",(0,i.kt)("inlineCode",{parentName:"p"},"https://api.modrinth.com/..."),". These use separate databases, with ",(0,i.kt)("inlineCode",{parentName:"p"},"staging")," being primarily for testing the API before it is rolled out onto the production servers. Production uses the latest tagged on the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/modrinth/labrinth"},"labrinth")," repository, whereas ",(0,i.kt)("inlineCode",{parentName:"p"},"staging")," uses its latest commit."))}m.isMDXComponent=!0}}]);